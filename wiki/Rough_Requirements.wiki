#summary This is the requirements document.
= Backup Utility Rough Requirements =
*Overview*

The objective of this product is to allow unsophisticated users to easily
maintain backup copies of their work, to be recovered in the case of hardware
failure or user error. The new utility back-up/restore is intended for use in a
medium-scale network environment, such as corporate department level
computing or university computing. The utility is intended to minimize the
effort required by the system administrators, while maximizing flexibility for
the end-users.

*Key Elements*

Data can be saved to disk or removable media, either locally or remotely. The
system consists of at least three distinct components. The first component is a
graphical utility that allows end-users to control the back-up and restoration of
their data on their personal systems. The second component, which has no
graphical user interface, performs client-side work to copy data between the
client and a remote server machine. The final component, which runs on the
server machine, communicates with this client-side utility.
This utility considers two distinct kinds of back-up efforts: creating recovery
media and performing regular file back-ups. When creating recovery media, the
user specifies some subset of files and directories to be backed up in its
entirety. These files, along with a simple restore program, are written to some
removable media, either on the local machine, if an appropriate device exists,
or to an appropriate device on the server. This action is performed immediately
and no record of the back-up needs to be retained.

Regular file back-ups are significantly more complicated. When installed on the
client machine, the back-up utility establishes a default back-up regimen, which
may be controlled by the local system administrators. The user may then
choose to modify this regimen, as described later in these requirements. The
regimen describes one or more back-up sessions. Each session describes what
files are to be considered for backing up. The regimen describes how frequently
each session should be backed up. A session may be incremental, meaning that
only files that have been created or modified since the last back-up need to be
backed-up, or full, meaning that every file is backed up. An incremental session
must also note any files that have been deleted since the last back-up.
Incremental sessions may also be linked to other sessions, meaning that they
only need to back-up files modified, deleted or created since the last time this
session or any linked session was backed-up. On a file by file or directory by
directory basis, a user may indicate that a session perform full back-ups of
specific files or directories.

A session may also be indicated as archival or not. Sessions not marked as
archival may no longer be available after some local defined period of time. At
any point before this time has elapsed, the user may restore the version of any
file or directory as of the date the session was backed-up. Based on locally
defined administrative rules, restoring recent sessions will be available
immediately, while older sessions may require active participation of system
administrators(to insert the appropriate media).

*Additional Functional Requirements*

The user has three choices for recovering older versions of files or directories.:
     * The user may browse through the complete set of files included in any session, examining name, creation date, modification date and size for each file for each session in which it was backed up. By default, only the information from recent sessions is available in this view.
     * The user may browse by session, indicating which one or more files or directories to restore from that session.
     * Finally the user may choose to restore one or more files or directories or even the full system to the state as of some previous point in time. A user may mark a session as local disk only, making the copies onto the local disk only. Backing-up these local sessions is expected to be fast, so they may repeat frequently, even hourly. To reduce the amount of data copied in these local sessions, the default for local sessions is always incremental. If the client machine includes a cd-r drive, tape drive or other supported removable media device, the session may be indicated as local media back-up. The default is always server back-up. If the back-up of any session fails, the utility will display a warning window for the user to see. 

*Optional Features*

(You must choose one of these optional features or select one of your own and
decribe that feature.)

The user may choose to encrypt or not encrypt each session, On a file by file or
directory by directory basis, the user may override this encryption. Similarly, the
user may specify a default compression algorithm to use of the session as a
whole. Again, this compression choice may be overridden for individual files or
directories.

Each session may default, based on file type determined by the file name suffix,
to perform delta backups. A delta back-up only copies the change from a
previous version, rather than the entire version. The session must indicate what
program will compute the backup and what program can restore a delta.
Optionally, the session may indicate a program that can indicate whether a
given file should be fully backed up or if a delta back-up should be performed.

*Use Case: Adding a file*
{{{
Goal:
     The user wants to add one or more files or directories to a session.
Resources:
     Existing session definitions.
User actions:
     Select a session by browsing the existing sessions.
     Open a file browser over the actual file system.
     Select one or more directories
     Optionally, indicate one or more files
     The files may be indicated by selecting them, by typing their names or described using the wild card system of the underlying file system.
     The user may choose to modify the options for these files.
     The user may choose to repeat this sequence, starting at any point.
Product action:
     The session definition is updated
}}}
*Use Case: Creating a session*
{{{
Goal:
     The user wants to create a new session.
Resources:
     existing session definitions
User actions:
     Request a new session
     Indicate whether session is local
     Indicate whether session is incremental
     If incremental, indicated any linked sessions
     Indicate frequency session should be backed-up
     Indicate approximate starting time for back-ups
     Add files to session
     Save the session
Product action:
     The new session definition is created
}}}
*Restoring a file Use Case*
{{{
Goal:
     The user wants to restore a specific file from a specific date.
Resources:
     Historic session backups.
User actions:
     Open a file browser over the actual file system.
     Select one or more files or directories
     Request a restore of the file
     Indicate what date the restored file should be from.
     Optionally, indicate where the file should be restored to. (the default is to restore it to its original location)
Product action:
     The system indicates whether the indicated file is available from the desired date.
     The file is restored to its previous state at the appropriate location.
}}}
*Finding a previous version Use Case*
{{{
Goal:
     The user wants to restore a specific file, but is unsure when the file was in the
desired state.
Resources:
     Historic session backups.
User actions:
     Open a file browser over the backed-up file system.
     Select a file.
     Request information on backed-up versions
     Indicate which version to restore.
     Optionally, indicate where the file should be restored to. (the default is to restore it to its original location)
Product action:
     The system displays the requested information.
     The file is restored to its previous state at the appropriate location.
}}}
*Non-functional requirements*

Platform: The client side must be accessible from at least two of the three
common platforms, Windows, Mac and Linux. The program will support at least
cd-r drives and cd-rw drives as a removable media.

Performance: A local session, without encryption or delta back-ups, should be
able to back-up at least 1 megabyte per second. A remote session, with
encryption, compression and delta-backups all enabled, should be able to backup
50kbytes/second, as measured by original file size.

Security: Only the originating user or the system administrator should be able
to access the remote backup files.

Users: The system administrator is assumed to be computer savvy, with the
ability to learn complex tools and diagnose issues. The end user is presumed to
have simple computer literacy skills only, such as copying files.

Scale: The product must be able to relate to support backups including 1000's
of files including multiple megabytes.

Data: Other than file format specific to delta backups, no file format
information can be assumed.

The product will not support any internationalization features and will be run in
an office environment.

The product is not expected to be enhanced beyond the initial version.

The prototype of the product is required by early December. No slippage is
allowed.